{
	"info": {
		"_postman_id": "1eaebd28-a9ae-4f48-9228-89c17768e9ce",
		"name": "softxpert/task-api",
		"description": "Complete collection for Task API admin routes with authentication",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22834161",
		"_collection_link": "https://bold-capsule-935226.postman.co/workspace/task-api~f0ad4c0c-6742-4f63-83bc-0ad61fa35677/collection/22834161-1eaebd28-a9ae-4f48-9228-89c17768e9ce?action=share&source=collection_link&creator=22834161"
	},
	"item": [
		{
			"name": "Admin API",
			"item": [
				{
					"name": "Authentication",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 200) {",
											"    const responseJson = pm.response.json();",
											"    if (responseJson.data && responseJson.data.token) {",
											"        // Extract token without 'Bearer ' prefix",
											"        const token = responseJson.data.token.replace('Bearer ', '');",
											"        pm.collectionVariables.set('access_token', token);",
											"        console.log('Token saved:', token);",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "manager@example.com",
											"description": "User email address (required)",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"description": "User password (required, min 8 characters)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"login"
									]
								},
								"description": "Login to get access token. Token will be automatically saved to collection variables."
							},
							"response": []
						},
						{
							"name": "Logout",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/logout",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"logout"
									]
								},
								"description": "Logout and invalidate current access token"
							},
							"response": []
						}
					],
					"description": "Authentication endpoints for admin users"
				},
				{
					"name": "Tasks",
					"item": [
						{
							"name": "Get All Tasks (with Filters)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/tasks?per_page=10",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tasks"
									],
									"query": [
										{
											"key": "filter[status]",
											"value": "completed",
											"description": "Filter by status: pending, in_progress, completed, cancelled, on_hold",
											"disabled": true
										},
										{
											"key": "filter[due_date]",
											"value": "2025-09-01,2025-09-30",
											"description": "Filter by date range (from,to) or single date",
											"disabled": true
										},
										{
											"key": "filter[assignee_id]",
											"value": "1",
											"description": "Filter by assigned user ID",
											"disabled": true
										},
										{
											"key": "filter[priority]",
											"value": "high",
											"description": "Filter by priority: low, medium, high",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "due_date",
											"description": "Sort by: status, priority, due_date (add - for descending)",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "10",
											"description": "Number of items per page"
										}
									]
								},
								"description": "Get filtered and sorted list of tasks with pagination"
							},
							"response": []
						},
						{
							"name": "Get Single Task",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/tasks/:task_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tasks",
										":task_id"
									],
									"variable": [
										{
											"key": "task_id",
											"value": "11"
										}
									]
								},
								"description": "Get single task by ID with relationships"
							},
							"response": []
						},
						{
							"name": "Create Task",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Complete API Documentation",
											"description": "Task title (required)",
											"type": "text"
										},
										{
											"key": "description",
											"value": "Write comprehensive documentation for all API endpoints",
											"description": "Task description (optional)",
											"type": "text"
										},
										{
											"key": "due_date",
											"value": "2025-10-15",
											"description": "Due date in YYYY-MM-DD format (optional)",
											"type": "text"
										},
										{
											"key": "assignee_id",
											"value": "1",
											"description": "ID of user to assign task to (optional)",
											"type": "text"
										},
										{
											"key": "priority",
											"value": "high",
											"description": "Priority: low, medium, high (optional)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/tasks",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tasks"
									]
								},
								"description": "Create a new task (without dependencies - use separate API for dependencies)"
							},
							"response": []
						},
						{
							"name": "Create Task (Minimal)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Simple Task",
											"description": "Task title (required)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/tasks",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tasks"
									]
								},
								"description": "Create a task with only required fields"
							},
							"response": []
						},
						{
							"name": "Update Task",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "title",
											"value": "Title",
											"description": "Task title (required)",
											"type": "text"
										},
										{
											"key": "description",
											"value": "Updated description with more details",
											"description": "Task description (optional)",
											"type": "text"
										},
										{
											"key": "due_date",
											"value": "2025-10-20",
											"description": "Due date in YYYY-MM-DD format (optional)",
											"type": "text"
										},
										{
											"key": "assignee_id",
											"value": "2",
											"description": "ID of user to assign task to (optional)",
											"type": "text"
										},
										{
											"key": "priority",
											"value": "high",
											"description": "Priority: low, medium, high (optional)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/tasks/:task_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tasks",
										":task_id"
									],
									"variable": [
										{
											"key": "task_id",
											"value": "1"
										}
									]
								},
								"description": "Update task fields (status and dependencies managed separately)"
							},
							"response": []
						},
						{
							"name": "Update Task Status",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "status",
											"value": "completed",
											"description": "Status: pending, in_progress, completed, cancelled, on_hold (required)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/tasks/:task_id/status",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tasks",
										":task_id",
										"status"
									],
									"variable": [
										{
											"key": "task_id",
											"value": "2"
										}
									]
								},
								"description": "Update task status with dependency validation (will fail if dependencies aren't completed)"
							},
							"response": []
						}
					],
					"description": "Task management endpoints with full CRUD operations"
				},
				{
					"name": "Task Dependencies",
					"item": [
						{
							"name": "Get Task Dependencies",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/tasks/:task_id/dependencies",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tasks",
										":task_id",
										"dependencies"
									],
									"variable": [
										{
											"key": "task_id",
											"value": "1"
										}
									]
								},
								"description": "Get all dependencies for a specific task"
							},
							"response": []
						},
						{
							"name": "Add Task Dependencies",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "dependencies[]",
											"value": "2",
											"description": "Task ID this task depends on (required, can have multiple)",
											"type": "text"
										},
										{
											"key": "dependencies[]",
											"value": "3",
											"description": "Task ID this task depends on (required, can have multiple)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/tasks/:task_id/dependencies",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tasks",
										":task_id",
										"dependencies"
									],
									"variable": [
										{
											"key": "task_id",
											"value": "1"
										}
									]
								},
								"description": "Add new dependencies to an existing task"
							},
							"response": []
						},
						{
							"name": "Remove Single Dependency",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/tasks/:task_id/dependencies/:dependency_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tasks",
										":task_id",
										"dependencies",
										":dependency_id"
									],
									"variable": [
										{
											"key": "task_id",
											"value": "1"
										},
										{
											"key": "dependency_id",
											"value": "2"
										}
									]
								},
								"description": "Remove a specific dependency from a task"
							},
							"response": []
						}
					],
					"description": "Separate API endpoints for managing task dependencies"
				}
			]
		},
		{
			"name": "User APIs (api/v1)",
			"item": [
				{
					"name": "User Authentication",
					"item": [
						{
							"name": "User Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 200) {",
											"    const responseJson = pm.response.json();",
											"    if (responseJson.data && responseJson.data.token) {",
											"        const token = responseJson.data.token.replace('Bearer ', '');",
											"        pm.collectionVariables.set('user_access_token', token);",
											"        console.log('User token saved:', token);",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "user@example.com",
											"description": "User email address (required)",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"description": "User password (required, min 8 characters)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{user_base_url}}/login",
									"host": [
										"{{user_base_url}}"
									],
									"path": [
										"login"
									]
								},
								"description": "Login as regular user to get access token"
							},
							"response": []
						},
						{
							"name": "User Logout",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{user_base_url}}/logout",
									"host": [
										"{{user_base_url}}"
									],
									"path": [
										"logout"
									]
								},
								"description": "Logout user and invalidate token"
							},
							"response": []
						}
					]
				},
				{
					"name": "User Tasks",
					"item": [
						{
							"name": "All Tasks (current auth user)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{user_base_url}}/tasks?per_page=10",
									"host": [
										"{{user_base_url}}"
									],
									"path": [
										"tasks"
									],
									"query": [
										{
											"key": "filter[status]",
											"value": "pending",
											"description": "Filter by status: pending, in_progress, completed, cancelled, on_hold",
											"disabled": true
										},
										{
											"key": "filter[priority]",
											"value": "high",
											"description": "Filter by priority: low, medium, high",
											"disabled": true
										},
										{
											"key": "filter[date_range]",
											"value": "2025-09-01,2025-09-30",
											"description": "Filter by date range (from,to) or single date",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "due_date",
											"description": "Sort by: status, priority, due_date (add - for descending)",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "10",
											"description": "Number of items per page"
										}
									]
								},
								"description": "Get tasks assigned to current user only"
							},
							"response": []
						},
						{
							"name": "Show Task (auth user task)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{user_base_url}}/tasks/:task_id",
									"host": [
										"{{user_base_url}}"
									],
									"path": [
										"tasks",
										":task_id"
									],
									"variable": [
										{
											"key": "task_id",
											"value": "5"
										}
									]
								},
								"description": "Get single task details (only if assigned to current user)"
							},
							"response": []
						},
						{
							"name": "Update Auth User Task Status",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "status",
											"value": "completed",
											"description": "Status: pending, in_progress, completed, cancelled, on_hold (required)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{user_base_url}}/tasks/:task_id/status",
									"host": [
										"{{user_base_url}}"
									],
									"path": [
										"tasks",
										":task_id",
										"status"
									],
									"variable": [
										{
											"key": "task_id",
											"value": "1"
										}
									]
								},
								"description": "Update status of task assigned to current user (with dependency validation)"
							},
							"response": []
						}
					]
				}
			],
			"description": "User APIs for regular users to manage their assigned tasks only"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://task-api.test/admin",
			"type": "string"
		},
		{
			"key": "user_base_url",
			"value": "https://task-api.test/api/v1",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_access_token",
			"value": "",
			"type": "string"
		}
	]
}